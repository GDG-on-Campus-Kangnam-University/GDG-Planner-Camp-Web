// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   BigInt    @id @default(autoincrement())
  password  Int
  name      String
  balance   BigInt
  role      Role
  team_id   BigInt?
  team      Team?     @relation(fields: [team_id], references: [team_id])

  purchases Purchase[]

  @@map("user")
}

model Team {
  team_id    BigInt   @id @default(autoincrement())
  name       String
  product_id BigInt?
  product    Product? @relation(fields: [product_id], references: [product_id])

  revenue    BigInt
  users      User[]
  settings   GlobalSetting?

  @@map("team")
}

model Product {
  product_id  BigInt   @id @default(autoincrement())
  name        String
  picture     String
  status      Status
  description String

  models      Model[]
  teams       Team[]

  @@map("product")
}

model Model {
  model_id     BigInt   @id @default(autoincrement())
  name         String
  total_count  Int
  price        BigInt
  description  String
  product_id   BigInt?
  product      Product? @relation(fields: [product_id], references: [product_id])

  purchases    Purchase[]

  @@map("model")
}

model Purchase {
  purchase_id   BigInt   @id @default(autoincrement())
  user_id       BigInt
  model_id      BigInt
  quantity      Int
  purchase_date DateTime

  user  User  @relation(fields: [user_id], references: [user_id])
  model Model @relation(fields: [model_id], references: [model_id])

  @@map("purchase")
}

model GlobalSetting {
  id       BigInt @id @default(autoincrement())
  team_id  BigInt @unique
  blurred  Boolean

  team Team @relation(fields: [team_id], references: [team_id])

  @@map("global_setting")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
}
